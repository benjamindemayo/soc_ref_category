filter(time_bin >= -6) %>%
ggplot(aes(axis_position, mean)) +
geom_point(aes(size = n)) +
geom_line() +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2) +
labs(
x = "time before decision (seconds)",
y = "mean proportion looking at experimenter",
title = "Timecourse of childrenâ€™s referencing\nof experimenter prior to decision",
caption = "Child's decision occurs at time 0",
size = "Number of trials\nrepresented"
) +
scale_size_continuous(
breaks = seq(from = 700, to = 0, by = -100),
range = c(1, 4.5)
) +
scale_x_continuous(breaks = seq(from = -6, to = 0, by = 0.5)) +
ggthemes::theme_few() +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
plot.subtitle = element_text(hjust = 0.5, size = 12),
axis.title = element_text(size = 14),
axis.text = element_text(size = 8)
)
mean_trial_length <-
d_trials %>%
mutate(trial_length = offset - onset) %>%
filter(trial_length > 0) %>%
summarise(mean = mean(trial_length))
install.packages("papaja")
install.packages("papaja")
setwd("C:/Users/demay/Desktop/soc_ref_category/analysis")
install.packages("rjson")
install.packages("psych")
install.packages("psych")
install.packages("broman")
install.packages(kmr)
install.packages("kmr")
install.packages("stargazer")
r_refs(file = "soc_ref_category_bib.bib")
```{r load_packages, include = FALSE}
library("papaja")
library("papaja")
# Seed for random number generation
set.seed(42)
r_refs(file = "soc_ref_category_bib.bib")
?r_refs
View(trial_proportions)
View(all_data)
accuracy_proportions <-
all_data %>%
filter(!is.na(trial) & !is.na(accuracy)) %>%
group_by(sid, trial) %>%
mutate(
trial_length = max(t) - min(t),
look_captured = !is.na(x) | !is.na(y)
) %>%
mutate(look = case_when(
look_captured ~ "looking",
!look_captured ~ "not_looking"
)) %>%
ungroup() %>%
count(sid, trial, look, accuracy)
View(accuracy_proportions)
accuracy_proportions <-
all_data %>%
filter(!is.na(trial) & !is.na(accuracy)) %>%
group_by(sid, trial) %>%
mutate(
trial_length = max(t) - min(t),
look_captured = !is.na(x) | !is.na(y)
) %>%
mutate(look = case_when(
look_captured ~ "looking",
!look_captured ~ "not_looking"
)) %>%
ungroup() %>%
count(sid, trial, look, accuracy) %>%
spread(look, n) %>%
left_join(
demographics %>% select(SID, age),
by = c("sid" = "SID")
) %>%
replace_na(list(looking = 0, not_looking = 0)) %>%
mutate(prop_looking = looking / (looking + not_looking))
lmer_acc_data <-
accuracy_proportions %>%
mutate(
accuracy = factor(accuracy),
trial = factor(trial),
age_c = as.numeric(langcog::scale(age, scale = FALSE))
)
lmer_acc_data <-
accuracy_proportions %>%
mutate(
accuracy = factor(accuracy),
trial = factor(trial),
age_c = as.numeric(langcog::scale(age, scale = FALSE))
)
View(lmer_acc_data)
lmer_acc_data <-
accuracy_proportions %>%
mutate(
accuracy = factor(accuracy),
trial = factor(trial),
age_c = as.numeric(langcog::scale(age, scale = FALSE))
)
maximal_mod_acc <-
lmerTest::lmer(
prop_looking ~ accuracy * age_c +
(accuracy | sid) + (1 | trial),
data = lmer_data, REML = FALSE
)
lmer_acc_data <-
accuracy_proportions %>%
mutate(
accuracy = factor(accuracy),
trial = factor(trial),
age_c = as.numeric(langcog::scale(age, scale = FALSE))
)
maximal_mod_acc <-
lmerTest::lmer(
prop_looking ~ accuracy * age_c +
(accuracy | sid) + (1 | trial),
data = lmer_data_accuracy, REML = FALSE
)
lmer_acc_data <-
accuracy_proportions %>%
mutate(
accuracy = factor(accuracy),
trial = factor(trial),
age_c = as.numeric(langcog::scale(age, scale = FALSE))
)
maximal_mod_acc <-
lmerTest::lmer(
prop_looking ~ accuracy * age_c +
(accuracy | sid) + (1 | trial),
data = lmer_acc_data, REML = FALSE
)
g_lm_acc <- summary(maximal_mod_acc)
g_lm_acc
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking")
?fct_recode
?fct_relabel
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
mutate(
accuracy = fct_recode(accuracy, TRUE = "accurate", FALSE = "inaccurate")
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
mutate(
accuracy = fct_recode(accuracy, accurate = TRUE, inaccurate = FALSE)
)
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
ungroup %>%
mutate(
accuracy = fct_recode(accuracy, accurate = TRUE, inaccurate = FALSE)
)
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
ungroup %>%
mutate(
accuracy = as_factor(accuracy),
accuracy = fct_recode(accuracy, accurate = TRUE, inaccurate = FALSE)
)
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
ungroup %>%
ggplot(aes(accuracy, mean)) +
geom_col() +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper))
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
ungroup %>%
ggplot(aes(accuracy, mean)) +
geom_col() +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2) +
labs(
x = "Accuracy",
y = "Proportion of trial looking",
title = "Proportion of Trial Spent Looking at Experimenter by Accuracy"
) +
ggthemes::theme_few() +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12)
)
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
ungroup %>%
ggplot(aes(accuracy, mean)) +
geom_col() +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2) +
labs(
x = "Accuracy",
y = "Proportion of trial looking",
title = "Proportion of Trial Spent\nLooking at Experimenter by Accuracy"
) +
ggthemes::theme_few() +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12)
)
accuracy_proportions %>%
group_by(accuracy) %>%
multi_boot_standard(col = "prop_looking") %>%
ungroup %>%
ggplot(aes(accuracy, mean)) +
geom_col() +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2) +
labs(
x = "Accuracy",
y = "Proportion of trial looking",
title = "Proportion of Trial Spent\nLooking at Experimenter"
) +
ggthemes::theme_few() +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12)
)
View(lmer_data)
rm(list=ls())
knitr::opts_chunk$set(fig.width=3, fig.height=3, fig.crop = FALSE,
fig.pos = "tb", fig.path='figs/',
echo=FALSE, warning=FALSE, cache=TRUE, message=FALSE, sanitize = TRUE)
library(papaja)
library(tidyverse)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(lme4)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(broman)
library(kmr)
library(magrittr)
library(stargazer)
img <- png::readPNG("figs/socref_design.png")
grid::grid.raster(img)
load("soc_ref_e2.RData")
plength2 <- psych::describeBy(d$phase_length, d$phase_name)
load("soc_ref_e1.RData")
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(2, 3, 4, 5),
labels = c("two", "three", "four", "five"))
halfs<- d %>%
mutate(first_half = between(trial, 1, 4))
plength1 <- psych::describeBy(d$phase_length, d$phase_name)
phases1 <- data.frame()
phases2 <- data.frame()
phases1 <- bind_rows(phases1, plength1$label, plength1$slide, plength1$planning, plength1$response)%>%
select(mean, sd)%>%
mutate(phase = c("label","slide","planning","response"), Experiment = "1")
phases2 <- bind_rows(phases2, plength2$label, plength2$slide, plength2$planning, plength2$response)%>%
select(mean, sd)%>%
mutate(phase = c("label","slide","planning","response"), Experiment = "2")
phases <- bind_rows(phases1, phases2)%>%
select(Experiment, phase, mean, sd)
save(phases, file = "phases.RData")
library("papaja")
library(psych)
library(langcog)
library(tidyverse)
library(stringr)
library(magrittr)
library(lmerTest)
example_file <- "raw_data/020218_01-eye_data Samples.txt"
example_trial_file <- "trial_data/020218_01.csv"
demographics_sheet <- "soc_ref_cat_demo_github.csv"
key <- "trial_morphs.csv"
library("papaja")
library(psych)
library(langcog)
library(tidyverse)
library(stringr)
library(magrittr)
library(lmerTest)
example_file <- "raw_data/020218_01-eye_data Samples.txt"
example_trial_file <- "trial_data/020218_01.csv"
demographics_sheet <- "soc_ref_cat_demo_github.csv"
key <- "trial_morphs.csv"
read_chunk(demographics_sheet)
demographics_sheet <- "../soc_ref_cat_demo_github.csv"
read_chunk(demographics_sheet)
a <- read_chunk(demographics_sheet)
a <- read_csv(demographics_sheet)
View(age_months)
View(a)
library("papaja")
library(psych)
library(langcog)
library(tidyverse)
library(stringr)
library(magrittr)
library(lmerTest)
example_file <- "../raw_data/020218_01-eye_data Samples.txt"
example_trial_file <- "../trial_data/020218_01.csv"
demographics_sheet <- "../soc_ref_cat_demo_github.csv"
key <- "../trial_morphs.csv"
# Read in trial data.
demographics <- read_csv(demographics_sheet)
include <-
demographics %>%
filter(Exclude == "n")
trial_key <- read_csv(key)
d_trials <- data_frame()
files <- dir("trial_data")
for (f in files) {
subj_id <- str_replace(f, ".csv", "")
condition <-
demographics %>%
filter(`SID` == subj_id) %>%
pull("Condition")
jf <- paste("trial_data/", f, sep = "")
jd <- read_csv(jf)
id <-
tibble(
SID = subj_id,
trial = jd$Trial.Number,
onset = jd$Trial.onset / 1000,
offset = jd$Trial.offset / 1000,
chosen_side = jd$Trial.side
) %>%
mutate(
camera_onset = jd$camera.onset[1] / 1000,
webcam_onset = jd$webcam.onset[1] / 1000,
camera_lag = webcam_onset - camera_onset,
webcam_length = jd$extcam_length.onset[1] / 1000,
onset = onset + camera_lag,
offset = offset + camera_lag
)
d_trials <- bind_rows(d_trials, id)
}
d_trials <-
d_trials  %>%
left_join(
demographics %>% select(SID, Condition),
by = c("SID")
) %>%
left_join(
trial_key,
by = c("trial" = "Trial", "Condition")
) %>%
mutate(
accuracy = case_when(
correct_side == "M" ~ NA,
correct_side != "M" ~ correct_side == chosen_side
)
) %>%
left_join(
demographics %>% select(SID, age),
by = "SID"
)
# Read in trial data.
demographics <- read_csv(demographics_sheet)
library(psych)
library(langcog)
library(tidyverse)
library(stringr)
library(magrittr)
library(lmerTest)
example_file <- "raw_data/020218_01-eye_data Samples.txt"
example_trial_file <- "trial_data/020218_01.csv"
demographics_sheet <- "soc_ref_cat_demo_github.csv"
key <- "trial_morphs.csv"
# Read in trial data.
demographics <- read_csv(demographics_sheet)
include <-
demographics %>%
filter(Exclude == "n")
trial_key <- read_csv(key)
d_trials <- data_frame()
files <- dir("trial_data")
for (f in files) {
subj_id <- str_replace(f, ".csv", "")
condition <-
demographics %>%
filter(`SID` == subj_id) %>%
pull("Condition")
jf <- paste("trial_data/", f, sep = "")
jd <- read_csv(jf)
id <-
tibble(
SID = subj_id,
trial = jd$Trial.Number,
onset = jd$Trial.onset / 1000,
offset = jd$Trial.offset / 1000,
chosen_side = jd$Trial.side
) %>%
mutate(
camera_onset = jd$camera.onset[1] / 1000,
webcam_onset = jd$webcam.onset[1] / 1000,
camera_lag = webcam_onset - camera_onset,
webcam_length = jd$extcam_length.onset[1] / 1000,
onset = onset + camera_lag,
offset = offset + camera_lag
)
d_trials <- bind_rows(d_trials, id)
}
d_trials <-
d_trials  %>%
left_join(
demographics %>% select(SID, Condition),
by = c("SID")
) %>%
left_join(
trial_key,
by = c("trial" = "Trial", "Condition")
) %>%
mutate(
accuracy = case_when(
correct_side == "M" ~ NA,
correct_side != "M" ~ correct_side == chosen_side
)
) %>%
left_join(
demographics %>% select(SID, age),
by = "SID"
)
demographics <- read_csv(demographics_sheet)
setwd("C:/Users/demay/Desktop/soc_ref_category/analysis/soc_ref_category_paper")
library("papaja")
library(psych)
library(langcog)
library(tidyverse)
library(stringr)
library(magrittr)
library(lmerTest)
example_file <- "../raw_data/020218_01-eye_data Samples.txt"
example_trial_file <- "../trial_data/020218_01.csv"
demographics_sheet <- "../soc_ref_cat_demo_github.csv"
key <- "../trial_morphs.csv"
# Seed for random number generation
set.seed(42)
# Read in trial data.
demographics <- read_csv(demographics_sheet)
include <-
demographics %>%
filter(Exclude == "n")
trial_key <- read_csv(key)
d_trials <- data_frame()
files <- dir("trial_data")
for (f in files) {
subj_id <- str_replace(f, ".csv", "")
condition <-
demographics %>%
filter(`SID` == subj_id) %>%
pull("Condition")
jf <- paste("trial_data/", f, sep = "")
jd <- read_csv(jf)
id <-
tibble(
SID = subj_id,
trial = jd$Trial.Number,
onset = jd$Trial.onset / 1000,
offset = jd$Trial.offset / 1000,
chosen_side = jd$Trial.side
) %>%
mutate(
camera_onset = jd$camera.onset[1] / 1000,
webcam_onset = jd$webcam.onset[1] / 1000,
camera_lag = webcam_onset - camera_onset,
webcam_length = jd$extcam_length.onset[1] / 1000,
onset = onset + camera_lag,
offset = offset + camera_lag
)
d_trials <- bind_rows(d_trials, id)
}
d_trials <-
d_trials  %>%
left_join(
demographics %>% select(SID, Condition),
by = c("SID")
) %>%
left_join(
trial_key,
by = c("trial" = "Trial", "Condition")
) %>%
mutate(
accuracy = case_when(
correct_side == "M" ~ NA,
correct_side != "M" ~ correct_side == chosen_side
)
) %>%
left_join(
demographics %>% select(SID, age),
by = "SID"
)
